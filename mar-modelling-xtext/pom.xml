<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.github.models-lab.mar</groupId>
		<artifactId>mar-main</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>mar-modelling-xtext</artifactId>
	<name>mar-modelling-xtext</name>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13</version>
			<scope>test</scope>
		</dependency>

		<!-- Project dependencies -->
		<dependency>
			<groupId>io.github.models-lab.mar</groupId>
			<artifactId>mar-common</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext</artifactId>
			<version>2.30.0</version>
			<!-- Not sure if this is going to work, but it is to avoid conflicts with 
				gymnast -->
			<scope>provided</scope>
			
			<!-- It seems that this guava version was taken precedence because of 
				the provided flag... -->
			<!-- <exclusions> -->
			<!-- <exclusion> -->
			<!-- <groupId>com.google.guava</groupId> -->
			<!-- <artifactId>guava</artifactId> -->
			<!-- </exclusion> -->
			<!-- </exclusions> -->
		</dependency>

		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.generator</artifactId>
			<version>2.30.0</version>
			<scope>provided</scope>
			<exclusions>
			  <exclusion>
			    <groupId>org.osgi.service</groupId>
			    <artifactId>org.osgi.service.prefs</artifactId>
			  </exclusion>
			</exclusions>
			<!-- On 15/June/2022 we got the error reported here. The easiest workaround was to use this exclusion (see also mar-modelling-eclipse) -->
			<!-- https://stackoverflow.com/questions/72625637/maven-build-failed-due-to-jdt-dependencies-no-versions-available-for-org-osgi -->
		</dependency>

		<dependency>
			<groupId>elysium</groupId>
			<artifactId>elysium</artifactId>
			<version>0.6.0</version>
		</dependency>

		<!-- Needed for Elysium for Lilypond -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.10.0</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- Java 11 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
